This is a simple example of Sod shock tube in 2D.

A diaphragm is initialized at (0,0) in a domain [-1,1] x [0,0.1].

The density ratio across the diaphragm is 8. 

 - Run 'mkdir profiles' to store the thermodynamic, velocity and Entropy Viscosity
   profiles. 

 - Profile files are written for each processor at a given time. To consolidate 
   all these into a single file run prof2h5.py.

   Usage: execfile("prof2h5.py") from within a python interpreter
   produces prof10001.h5, an HDF5 file with the abscissa along the bottom
   of the domain in the dataset "/x", and the following groups

   "profiles/exact/" containing datasets "u", "d" and "T" for velocity, density
   and temperature from the E1RPEX exact Riemann solver of Prof. Elueterio F. Toro
   (included in sod3.usr)

   "profiles/cmt/" containing datasets "u", "d" and "T" for velocity, density
   and temperature from CMT-nek, and the following datasets
   "mu"   : artificial first viscosity coefficient
   "lambda" : artificial second viscosity coefficient such that bulk viscosity=
              mu+2/3*lambda
   "kappa": artificial thermal conductivity

    the solution files contain these variables in
    s1 : density 
    s2 : "mu"
    s3 : "kappa"
    s4 : "lambda"

    limiters are stored in 
    s5 : theta, the limiter for density positivity
    s6 : epsilon, the limiter for internal energy positivity (experimental)

=====
NOTE:
=====

 - The highest Courant number I've gotten to work for this case is 0.3.

 - The tunable parameters in the artificial viscosity are set in uservp to:
      cmu=0.025
      cbeta=5.0
      ckappa=0.01
